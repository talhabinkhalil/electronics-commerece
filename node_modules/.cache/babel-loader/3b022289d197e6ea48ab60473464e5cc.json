{"ast":null,"code":"let initialState = {\n  currentUser: null,\n  isFetching: false,\n  error: false\n};\nexport const userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"loginStart\":\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case \"loginSuccess\":\n      {\n        return { ...state,\n          isFetching: false,\n          currentUser: action.payload,\n          error: false\n        };\n      }\n\n    case \"loginFailure\":\n      {\n        return { ...state,\n          isFetching: false,\n          currentUser: null,\n          error: true\n        };\n      }\n\n    case \"logOut\":\n      {\n        return { ...state,\n          isFetching: false,\n          currentUser: null,\n          error: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/talha/React-E-commerce-Client/src/redux/userReducer.js"],"names":["initialState","currentUser","isFetching","error","userReducer","state","action","type","payload"],"mappings":"AAAA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAAnB;AAMA,OAAO,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AAAmB;AACjB,eAAO,EACL,GAAGF,KADE;AAELH,UAAAA,UAAU,EAAE;AAFP,SAAP;AAID;;AACD,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGG,KADE;AAELH,UAAAA,UAAU,EAAE,KAFP;AAGLD,UAAAA,WAAW,EAAEK,MAAM,CAACE,OAHf;AAILL,UAAAA,KAAK,EAAE;AAJF,SAAP;AAMD;;AACD,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGE,KADE;AAELH,UAAAA,UAAU,EAAE,KAFP;AAGLD,UAAAA,WAAW,EAAE,IAHR;AAILE,UAAAA,KAAK,EAAE;AAJF,SAAP;AAMD;;AACD,SAAK,QAAL;AAAe;AACb,eAAO,EACL,GAAGE,KADE;AAELH,UAAAA,UAAU,EAAE,KAFP;AAGLD,UAAAA,WAAW,EAAE,IAHR;AAILE,UAAAA,KAAK,EAAE;AAJF,SAAP;AAMD;;AACD;AACE,aAAOE,KAAP;AAhCJ;AAkCD,CAnCM","sourcesContent":["let initialState = {\n  currentUser: null,\n  isFetching: false,\n  error: false,\n};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"loginStart\": {\n      return {\n        ...state,\n        isFetching: true,\n      };\n    }\n    case \"loginSuccess\": {\n      return {\n        ...state,\n        isFetching: false,\n        currentUser: action.payload,\n        error: false,\n      };\n    }\n    case \"loginFailure\": {\n      return {\n        ...state,\n        isFetching: false,\n        currentUser: null,\n        error: true,\n      };\n    }\n    case \"logOut\": {\n      return {\n        ...state,\n        isFetching: false,\n        currentUser: null,\n        error: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}