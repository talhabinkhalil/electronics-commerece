{"ast":null,"code":"var _jsxFileName = \"/home/talha/React-E-commerce-Client/src/AdminPages/AdminUserEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport AdminNav from \"../AdminComponents/AdminNav\";\nimport Footer from \"../components/Footer\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as YUP from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport { large, small } from \"../responsive\";\nimport { publicRequest } from \"../axiosMethod\"; //styled comp\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Maincontainer = styled.div`\n  background-color: whitesmoke;\n`;\n_c = Maincontainer;\nconst Container = styled.div`\n  margin: 2rem 8rem;\n  ${large({\n  margin: \"2rem 1rem\"\n})}\n`;\n_c2 = Container;\nconst Input = styled(Field)`\n  height: 2rem;\n  margin: 1rem 0;\n  width: 30rem;\n  text-align: center;\n  ${small({\n  width: \"18rem\"\n})}\n`;\n_c3 = Input;\nconst Button = styled.button`\n  border: none;\n  background-color: black;\n  color: white;\n  padding: 8px;\n  margin-bottom: 1rem;\n  width: 12rem;\n`;\n_c4 = Button;\nconst Error = styled.div`\n  color: red;\n  font-size: 0.8rem;\n`;\n_c5 = Error;\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #25283d;\n`;\n_c6 = FormContainer;\nconst Label = styled.label`\n  width: 100%;\n  text-align: center;\n  color: white;\n  font-size: 1.3rem;\n`;\n_c7 = Label;\n\nconst AdminUserList = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [info, setInfo] = useState(\"\");\n  const params = useParams();\n  const Puser = useSelector(state => state.user);\n  const [loading, setLoading] = useState(false); //schema\n\n  const signInSchema = YUP.object().shape({\n    username: YUP.string().required(\"Please Enter UserName\").min(6, \"Username length should be more than 5\"),\n    email: YUP.string().required(\"Please Enter Email\").email()\n  });\n\n  const getUser = async () => {\n    try {\n      const res = await publicRequest.get(`/users/find/${params.id}`, {\n        headers: {\n          token: Puser.currentUser.token\n        }\n      });\n      console.log(res.data);\n      setUser(res.data);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getUser(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Maincontainer, {\n      children: [/*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"TailSpin\",\n          color: \"#25283D\",\n          height: 100,\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(FormContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: \"white\"\n              },\n              children: \"Edit User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                username: user.username,\n                email: user.email\n              },\n              validationSchema: signInSchema,\n              onSubmit: async (values, _ref) => {\n                let {\n                  resetForm\n                } = _ref;\n                console.log(values);\n\n                try {\n                  const res = await publicRequest.put(`/users/${params.id}`, values, {\n                    headers: {\n                      token: Puser.currentUser.token\n                    }\n                  });\n                  console.log(res);\n                  setInfo(\"User Updated Successfully\");\n                  resetForm();\n                } catch (err) {\n                  console.log(err);\n                  setInfo(\"oops something went wrong!\");\n                }\n              },\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \" UserName\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      placeholder: \"UserName\",\n                      className: \"form-control\",\n                      id: \"username\",\n                      name: \"username\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Error, {\n                      children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"username\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \" Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"text\",\n                      placeholder: \"Email\",\n                      className: \"form-control\",\n                      id: \"email\",\n                      name: \"email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Error, {\n                      children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        color: \"orange\"\n                      },\n                      children: info\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"/adminUserList\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        children: \"View List\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), !loading && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AdminUserList, \"qroeVS7WkN3L7lgsZKMWKfrTI0c=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c8 = AdminUserList;\nexport default AdminUserList;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Maincontainer\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Error\");\n$RefreshReg$(_c6, \"FormContainer\");\n$RefreshReg$(_c7, \"Label\");\n$RefreshReg$(_c8, \"AdminUserList\");","map":{"version":3,"sources":["/home/talha/React-E-commerce-Client/src/AdminPages/AdminUserEdit.jsx"],"names":["React","useState","useEffect","useSelector","useParams","styled","AdminNav","Footer","Formik","Form","Field","ErrorMessage","YUP","Link","Loader","large","small","publicRequest","Maincontainer","div","Container","margin","Input","width","Button","button","Error","FormContainer","Label","label","AdminUserList","user","setUser","info","setInfo","params","Puser","state","loading","setLoading","signInSchema","object","shape","username","string","required","min","email","getUser","res","get","id","headers","token","currentUser","console","log","data","err","color","values","resetForm","put"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport AdminNav from \"../AdminComponents/AdminNav\";\nimport Footer from \"../components/Footer\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as YUP from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport { large, small } from \"../responsive\";\nimport { publicRequest } from \"../axiosMethod\";\n\n//styled comp\nconst Maincontainer = styled.div`\n  background-color: whitesmoke;\n`;\nconst Container = styled.div`\n  margin: 2rem 8rem;\n  ${large({ margin: \"2rem 1rem\" })}\n`;\nconst Input = styled(Field)`\n  height: 2rem;\n  margin: 1rem 0;\n  width: 30rem;\n  text-align: center;\n  ${small({ width: \"18rem\" })}\n`;\n\nconst Button = styled.button`\n  border: none;\n  background-color: black;\n  color: white;\n  padding: 8px;\n  margin-bottom: 1rem;\n  width: 12rem;\n`;\nconst Error = styled.div`\n  color: red;\n  font-size: 0.8rem;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #25283d;\n`;\nconst Label = styled.label`\n  width: 100%;\n  text-align: center;\n  color: white;\n  font-size: 1.3rem;\n`;\n\nconst AdminUserList = () => {\n  const [user, setUser] = useState({});\n  const [info, setInfo] = useState(\"\");\n  const params = useParams();\n  const Puser = useSelector((state) => state.user);\n  const [loading, setLoading] = useState(false);\n\n  //schema\n  const signInSchema = YUP.object().shape({\n    username: YUP.string()\n      .required(\"Please Enter UserName\")\n      .min(6, \"Username length should be more than 5\"),\n    email: YUP.string().required(\"Please Enter Email\").email(),\n  });\n\n  const getUser = async () => {\n    try {\n      const res = await publicRequest.get(`/users/find/${params.id}`, {\n        headers: {\n          token: Puser.currentUser.token,\n        },\n      });\n      console.log(res.data);\n      setUser(res.data);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <Maincontainer>\n        <AdminNav />\n        {loading ? (\n          <div className=\"d-flex justify-content-center m-5\">\n            <Loader type=\"TailSpin\" color=\"#25283D\" height={100} width={100} />\n          </div>\n        ) : (\n          <Container>\n            <FormContainer>\n              <div>\n                <h3 style={{ color: \"white\" }}>Edit User</h3>\n              </div>\n              <div>\n                <Formik\n                  initialValues={{\n                    username: user.username,\n                    email: user.email,\n                  }}\n                  validationSchema={signInSchema}\n                  onSubmit={async (values, { resetForm }) => {\n                    console.log(values);\n\n                    try {\n                      const res = await publicRequest.put(\n                        `/users/${params.id}`,\n                        values,\n                        {\n                          headers: {\n                            token: Puser.currentUser.token,\n                          },\n                        }\n                      );\n\n                      console.log(res);\n                      setInfo(\"User Updated Successfully\");\n                      resetForm();\n                    } catch (err) {\n                      console.log(err);\n                      setInfo(\"oops something went wrong!\");\n                    }\n                  }}\n                >\n                  {() => {\n                    return (\n                      <Form>\n                        <div className=\"form-group\">\n                          <Label> UserName</Label>\n                          <Input\n                            type=\"text\"\n                            placeholder=\"UserName\"\n                            className=\"form-control\"\n                            id=\"username\"\n                            name=\"username\"\n                          />\n                          <Error>\n                            <ErrorMessage name=\"username\" />\n                          </Error>\n                        </div>\n                        <div className=\"form-group\">\n                          <Label> Email</Label>\n                          <Input\n                            type=\"text\"\n                            placeholder=\"Email\"\n                            className=\"form-control\"\n                            id=\"email\"\n                            name=\"email\"\n                          />\n                          <Error>\n                            <ErrorMessage name=\"email\" />\n                          </Error>\n                        </div>\n                        <div className=\"text-center\">\n                          <Button type=\"submit\">Update</Button>\n                        </div>\n                        <div>\n                          <p style={{ color: \"orange\" }}>{info}</p>\n                        </div>\n                        <div>\n                          <Link to=\"/adminUserList\">\n                            <Button>View List</Button>\n                          </Link>\n                        </div>\n                      </Form>\n                    );\n                  }}\n                </Formik>\n              </div>\n            </FormContainer>\n          </Container>\n        )}\n      </Maincontainer>\n      {!loading && <Footer />}\n    </>\n  );\n};\n\nexport default AdminUserList;\n"]},"metadata":{},"sourceType":"module"}